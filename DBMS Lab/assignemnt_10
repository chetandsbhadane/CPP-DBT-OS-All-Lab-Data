1) Write a procedure to find the factorial of the number.
Hint: use only repeat loop

delimiter &&
create procedure find_fact(in num int)
begin
	declare fact_res int default 1;
	repeat
	    set fact_res = fact_res * num;
	    set num = num - 1;
	until num<1
	end repeat;
	select fact_res;
end &&
delimiter ;

call find_fact(5);
+----------+
| fact_res |
+----------+
|      120 |
+----------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

======================================================================================================

2. Create a procedure to find the sum of digits of the number passed as
parameter to it.
Hint: use while loop

delimiter &&
create procedure sum_digit(in num int)
begin
	declare sum int default 0;
	declare rem int default 0;
	while num!=0 do
	   set rem = num%10;
	   set sum = sum + rem; 
	   set num = num/10;
	end while;
	select sum as 'sum of digit';
end &&
delimiter ;

call sum_digit(123);
+--------------+
| sum of digit |
+--------------+
|            6 |
+--------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)


======================================================================================
3. Write a procedure to print the Fibonacci sequence using any kind of the loop.
e.g. 0, 1, 1, 2, 3, 5, 8....

delimiter &&
create procedure fib_seq(in num int)
begin
	declare num1 int default 0;
	declare num2 int default 1;
	declare sum2 int default 0;
	declare res varchar(50) default ' ';
	set res = concat(res,num1,',',num2,',');
	while num>=0 do
	   set sum2 = num1 + num2;
	   set num1 = num2;
	   set num2 = sum2;
	   set res = concat(res,sum2,',');
	   set num = num -1;
	end while;
	select res;
end &&
delimiter ;
	   
call fib_seq(10);
+------------------------------------+
| res                                |
+------------------------------------+
|  0,1,1,2,3,5,8,13,21,34,55,89,144, |
+------------------------------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

==========================================================================================

4. Write a procedure to print all the odd and even numbers separately using
same procedure.

delimiter &&
create procedure print_even_odd(in num int)
begin
	declare even_res varchar(50) default ' ';
	declare odd_res varchar(50) default ' ';
	declare i int default 1;
	while num>=0 do
	   if(i%2=0) then
	      set even_res = concat(even_res,i,',');
	   else
	      set odd_res = concat(odd_res,i,',');
	   end if;
	set i = i +1;
	set num = num-1;
	end while;
	   select even_res;
	   select odd_res;
end &&
delimiter ;


call print_even_odd(10
    -> );
+--------------+
| even_res     |
+--------------+
|  2,4,6,8,10, |
+--------------+
1 row in set (0.00 sec)

+----------------+
| odd_res        |
+----------------+
|  1,3,5,7,9,11, |
+----------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)




	   
	   
